---
const props = Astro.props
---

<div
  class='flex flex-col border-slate-500 border-[1px] rounded-sm text-center gap-3 pb-2 transform hover:border-slate-100 duration-200'
>
  <div class='overflow-hidden w-full h-50 m-auto'>
    <img
      src={props.imagen}
      class='mx-auto transform hover:scale-125 duration-500 max-h-96'
    />
  </div>
  <h4 class='text-md font-semibold'>{props.nombre}</h4>
  <h4 class='text-sm'>{props.descripcion}</h4>
  <div class='flex flex-row gap-2 justify-center'>
    {
      props.tecnologias.map((tech: string) => (
        <span class='text-xs bg-slate-500 text-white px-2 py-1 rounded-sm cursor-default'>
          {tech}
        </span>
      ))
    }
  </div>
  {
    props.url && (
      <div>
        <a
          class='group relative inline-flex items-center overflow-hidden rounded bg-green-600 px-8 py-2 text-white focus:outline-none focus:ring active:bg-indigo-500'
          href={props.url} target='_blank'
        >
          <span class='absolute -end-full transition-all group-hover:end-4'>
            <svg
              class='h-5 w-5 rtl:rotate-180'
              xmlns='http://www.w3.org/2000/svg'
              fill='none'
              viewBox='0 0 24 24'
              stroke='currentColor'
            >
              <path
                stroke-linecap='round'
                stroke-linejoin='round'
                stroke-width='2'
                d='M17 8l4 4m0 0l-4 4m4-4H3'
              />
            </svg>
          </span>

          <span class='text-sm font-medium transition-all group-hover:me-4'>
            demo
          </span>
        </a>
      </div>
    )
  }
</div>
